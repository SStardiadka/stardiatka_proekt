from timeit import timeit

sts = (
    "AAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASvAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLASAAAAABNSDBHGSLHFGHSDBFHLAJKFSLFBJKSDABJKFBSDFHASDFHASDDDDDDLUEHHADGJHFAFGGADHJKFGHJDJHAKGSDFHGSDKSDFLQEHRWFGWLHELHJSDGFHJLGDSLLAS"
    * 1000
)


def palindrome_from_a_string(string: str) -> str:
    """
    На вход программы подается строка, содержащая заглавные латинские буквы
    (не обязательно различные)
    Разрешается переставлять буквы, а также удалять некоторые из них.
    Напишите программу, которая из данных букв по указанным правилам
    составит и выведет
    палиндром наибольшей длины, а если таких палиндромов несколько,
    то необходимо вывести первый из них в алфавитном порядке
    """
    if len(set(string)) == 1:
        return string

    else:
        dk = {}
        for i in string:
            dk[i] = dk.setdefault(i, 0) + 1

        dk = sorted(dk.items())

        left_right = (k * (v // 2) for k, v in dk)

        middle = (k * (v % 2) for k, v in dk)

        res_left_right = "".join(left_right)

        palindrome = res_left_right + "".join(middle)[:1] + res_left_right[::-1]
        return palindrome


print(
    timeit(
        "palindrome_from_a_string(sts)",
        globals=globals(),
        number=1,
    )
)
