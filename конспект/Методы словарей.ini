Методы словарей

5

Ключи словаря - это множество. Множества можно вычитать:

a = {'title': 'jr', 'description': '64', 'price': '3'}
b = {'python': 'dede', 'key:': '#789', 'title': 'jr', 'description': '64', 'price': '3'}
print(a.keys()-b.keys())
print(b.keys()-a.keys())
Вывод:

set()
{'python', 'key:'}

            посчитать количество повторений через словарь
                from  collections import Counter as cl
                dict1 = cl(input())
                print(dict1)

import operator  list1 = sorted(dict.items(), key=operator.itemgetter(1), reverse=True) - сортировка словаря.

dict.clear() - очищает словарь.

dict.copy() - возвращает копию словаря.

classmethod dict.fromkeys(seq[, value]) - создает словарь с ключами из seq и значением value (по умолчанию None).

dict.get(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а возвращает default (по умолчанию None).

dict.items() - возвращает пары (ключ, значение).

dict.keys() - возвращает ключи в словаре.

dict.pop(key[, default]) - удаляет ключ и возвращает значение. Если ключа нет, возвращает default (по умолчанию бросает исключение).

dict.popitem() - удаляет и возвращает пару (ключ, значение). Если словарь пуст, бросает исключение KeyError. Помните, что словари неупорядочены.

dict.setdefault(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а создает ключ со значением default (по умолчанию None).

dict.update([other]) - обновляет словарь, добавляя пары (ключ, значение) из other. Существующие ключи перезаписываются. Возвращает None (не новый словарь!).

dict.values() - возвращает значения в словаре.

                    генератор словаря
                for _ in range(int(input())):
                    key, value = input().split(': ')
                    mydict[key.lower()] = value

                    пересчитать количество повторов
                    result = {}
                    for num in numbers:
                        result[num] = result.get(num, 0) + 1

                        генератор
                        result = [{student_ids[i]: {student_names[i]: student_grades[i]}} for i in range(len(student_ids))]